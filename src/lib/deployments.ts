import { Address } from 'viem';

export interface ChainDeployments {
  SafeModuleManager?: Address;
  ManagedSafeModule?: Address;
  OwnerModuleFactory?: Address;
  ControlOwnerModule?: Address;
}

/**
 * Deployment addresses extracted from broadcast files
 * Auto-generated by scripts/update-deployments.ts
 * Last updated: 2025-10-01
 *
 * DO NOT EDIT THIS FILE MANUALLY
 * Run: pnpm update-deployments
 */
const DEPLOYMENT_ADDRESSES: Record<number, ChainDeployments> = {
  // Gnosis Chain
  100: {
    SafeModuleManager: '0x8e2447ecf79997240911a7431d69ae99befc3143',
    ManagedSafeModule: '0x5c0c204f7a177ab5c94516e06e76656205372db3',
  },
};

/**
 * Get deployment addresses for a specific chain
 */
export function getDeploymentAddresses(chainId: number): ChainDeployments {
  return DEPLOYMENT_ADDRESSES[chainId] || {};
}

/**
 * Get SafeModuleManager address for a chain, with fallback to OwnerModuleFactory
 */
export function getSafeModuleManagerAddress(chainId: number): Address | undefined {
  const addresses = getDeploymentAddresses(chainId);
  return addresses.SafeModuleManager || addresses.OwnerModuleFactory;
}

/**
 * Get ManagedSafeModule template address for a chain, with fallback to ControlOwnerModule
 */
export function getManagedSafeModuleAddress(chainId: number): Address | undefined {
  const addresses = getDeploymentAddresses(chainId);
  return addresses.ManagedSafeModule || addresses.ControlOwnerModule;
}

/**
 * Get block explorer URL for a chain
 */
export function getBlockExplorerUrl(chainId: number): string {
  const explorers: Record<number, string> = {
    1: 'https://etherscan.io',
    100: 'https://gnosisscan.io',
    8453: 'https://basescan.org',
    11155111: 'https://sepolia.etherscan.io',
    84532: 'https://sepolia.basescan.org',
    31337: 'http://localhost:8545',
  };
  return explorers[chainId] || 'https://etherscan.io';
}

/**
 * Contract versions
 */
export const CONTRACT_VERSIONS = {
  SafeModuleManager: 'v2.0.0-uups',
  ManagedSafeModule: 'v2.0.0-uups',
} as const;
